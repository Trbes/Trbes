= div_for(comment, data: { id: comment.id } )
  .comment-left
    .comment-upvote
      - if current_user.try(:voted_up_on?, comment)
        = link_to(comment_unvote_path(comment, current_user), class: "vote done #{'not-logged-in' unless user_signed_in?}") do
          .fa.fa-check
          .fa.fa-close
      - else
        = link_to(comment_vote_path(comment, current_user), class: "vote #{'not-logged-in' unless user_signed_in?}") do
          i.fa.fa-thumbs-up

      .vote-count = comment.cached_votes_total

      - if policy(comment).favourite?
        - if comment.favourite?
          = link_to unfavourite_admin_comment_path(comment), class: "unfavourite" do
            i.fa.fa-star data-toggle="tooltip" title="Unfavourite"
        - else
          = link_to favourite_admin_comment_path(comment), class: "favourite" do
            i.fa.fa-star-o data-toggle="tooltip" title="Favourite"

    - if policy(comment).create_nested?
      .comment-reply
        a.reply href="#"
          i.fa.fa-mail-reply
          | reply

  .comment-content
    header.comment-header
      .comment-author
        a.user-avatar[
          href="javascript:void(0)"
          data-toggle="popover"
          data-html="true"
          data-placement="bottom"
          data-content=user_popover_content(comment.membership)
          data-template=user_popover_template ]
          = present(current_group).role_overlay(comment.membership)
          = image_tag(comment.user_avatar_url, width: 16, height: 16)
        a.user-name>[
          href="javascript:void(0)"
          data-toggle="popover"
          data-html="true"
          data-placement="bottom"
          data-content=user_popover_content(comment.membership)
          data-template=user_popover_template ]
          = comment.user_full_name
        - if current_user && current_user.title
          | â€¢
          div.user-title< = comment.user_title
        - if comment.membership.moderator?
          span.label.label-info.user-label MOD

      .comment-meta
        span.date
          i.fa.fa-clock-o
          | posted #{distance_of_time_in_words_to_now(comment.created_at) } ago
    .comment-body
      = raw_sanitize(comment.body)

- comment.child_comments.each do |child_comment|
  .comment-nested
    = render "comments/comment", comment: child_comment
